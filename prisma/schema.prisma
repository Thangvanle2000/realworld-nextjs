generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             Int              @id @default(autoincrement())
    email          String           @unique
    bio            String?
    username       String
    image          String?
    password       String
    role           Role             @default(USER)
    articles       Article[]
    follows        Follow_User[]
    comments       Comment[]
    created_at     DateTime         @default(now())
    updated_at     DateTime         @updatedAt
    Follow_Article Follow_Article[]
}

model Article {
    id          Int             @id @default(autoincrement())
    tag         String[]
    title       String
    slug        String          @unique
    author      String
    body        String
    favorited   Boolean
    description String
    user_id     Int
    user        User            @relation(fields: [user_id], references: [id])
    status_post STATUSPOST
    comments    Comment[]
    created_at  DateTime        @default(now())
    updated_at  DateTime        @updatedAt
    follows     Follow_Article? @relation(fields: [followId], references: [id])
    followId    Int?
}

model Follow_User {
    id            Int      @id @default(autoincrement())
    following     Boolean  @default(false)
    user_id       Int
    user_followed Int
    user          User     @relation(fields: [user_id], references: [id])
    created_at    DateTime @default(now())
    updated_at    DateTime @updatedAt
}

model Follow_Article {
    id          Int       @id @default(autoincrement())
    following   Boolean   @default(false)
    articles_id Int?
    articles    Article[]
    user_id     Int       @unique
    users       User      @relation(fields: [user_id], references: [id])
    created_at  DateTime  @default(now())
    updated_at  DateTime  @updatedAt
}

model Comment {
    id             Int      @id @default(autoincrement())
    content        String
    comment_count  Int
    article_id     Int
    article        Article  @relation(fields: [article_id], references: [id])
    user_id        Int
    user           User     @relation(fields: [user_id], references: [id])
    favorite       Boolean  @default(false)
    favorite_count Int
    created_at     DateTime @default(now())
    updated_at     DateTime @updatedAt
}

enum Role {
    USER
    ADMIN
}

enum STATUSPOST {
    LIKE
    DISLIKE
}
